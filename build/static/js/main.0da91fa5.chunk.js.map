{"version":3,"sources":["assets/images/reddit-logo-full.png","assets/images/reddit-icon.png","store/Posts/constants.js","store/Posts/reducer.js","store/Posts/actions.js","api/reddit-api.js","containers/Header/Header.js","containers/Post/Post.js","view/PostsList/PostsList.js","view/PostsList/index.js","view/AppContainer/AppContainer.js","view/AppContainer/index.js","App.js","store/configureStore.js","store/reducers.js","index.js"],"names":["module","exports","__webpack_require__","p","FETCH_POSTS_BEGIN","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","initialState","posts","loading","error","postsReducer","state","arguments","length","undefined","action","type","console","log","payload","data","children","fetchPosts","limit","dispatch","fetchPostsBegin","fetch","concat","fetchPostsURL","then","handleErrors","res","json","fetchPostsSuccess","catch","fetchPostsFailure","response","ok","Error","statusText","Header","props","_useState","useState","_useState2","Object","slicedToArray","classname","setClassname","_useState3","_useState4","postType","setPostType","iconFunction","icon","amount","react_default","a","createElement","className","href","src","require","alt","aria-hidden","placeholder","onClick","Post","numeral","ups","format","subreddit","author","title","num_comments","class","PostsList","map","item","containers_Post_Post","key","id","subreddit_name_prefixed","subreddit_subscribers","is_video","media","connect","AppContainer","this","actions","Helmet","charSet","rel","sizes","containers_Header_Header","react_loader_spinner_default","color","height","width","view_PostsList","Switch","Route","exact","path","render","Component","bindActionCreators","history","createBrowserHistory","store","middlewares","thunk","routerMiddleware","enhancers","composeWithDevTools","applyMiddleware","apply","createStore","connectRouter","combineReducers","configureStore","App","es","lib","view_AppContainer","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0da91fa5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reddit-logo-full.bffb9b95.png\";","module.exports = __webpack_public_path__ + \"static/media/reddit-icon.990cf579.png\";","export const FETCH_POSTS_BEGIN   = 'FETCH_POSTS_BEGIN';\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS'\nexport const FETCH_POSTS_FAILURE = 'FETCH_POSTS_FAILURE';","import { FETCH_POSTS_BEGIN, FETCH_POSTS_SUCCESS, FETCH_POSTS_FAILURE } from './constants';\n\nconst initialState = {\n  posts: [],\n  loading: false,\n  error: null\n};\n\nfunction postsReducer(state = initialState, action) {\n  switch (action.type) {\n\n    case FETCH_POSTS_BEGIN:\n    return {\n      loading: true\n    }\n\n    case FETCH_POSTS_SUCCESS:\n    console.log('success', action.payload.data.children)\n    return {\n      posts: action.payload.data.children,\n      loading: false\n    };\n\n    case FETCH_POSTS_FAILURE:\n    return {\n      loading: false,\n      error: '404 Posts Not Found'\n    }\n\n    default:\n    return state;\n\n  }\n}\n\nexport default postsReducer;","import { FETCH_POSTS_BEGIN, FETCH_POSTS_SUCCESS, FETCH_POSTS_FAILURE } from './constants';\nimport { fetchPostsURL } from '../../api/reddit-api'\n\nconst fetchPosts = (type, limit) => dispatch => {\n  dispatch(fetchPostsBegin());\n  return fetch(fetchPostsURL(type, limit))\n  .then(handleErrors)\n  .then(res => res.json())\n  .then(json => {\n    dispatch(fetchPostsSuccess(json.data));\n    return json;\n  })\n  .catch(error => dispatch(fetchPostsFailure(error)));\n}\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\nconst fetchPostsBegin = () => ({\n  type: FETCH_POSTS_BEGIN\n})\n\nconst fetchPostsSuccess = data => ({\n  type: FETCH_POSTS_SUCCESS,\n  payload: { data }\n})\n\nconst fetchPostsFailure = error => ({\n  type: FETCH_POSTS_FAILURE\n})\n\nexport { fetchPosts }","function fetchPostsURL(type, limit) {\n  return `https://www.reddit.com/r/${type}.json?limit=${limit}`\n}\n\n// async function fetchPostsArray(type, limit) {\n//   const userResponse = await fetch(fetchPostsURL(type, limit))\n//   const user = await userResponse.json()\n//   return user\n// }\n\nexport { fetchPostsURL }","import React, { useState } from 'react'\n\nimport './Header.css'\n\nconst Header = (props) => {\n  \n  const [classname, setClassname] = useState('fa-line-chart')\n  const [postType, setPostType] = useState('Popular')\n\n  const iconFunction = (type, icon, amount) => {\n    props.fetchPosts(type, amount); \n    setClassname(icon); \n    setPostType(type)\n  }\n  \n  return (\n    <header>\n      <section className=\"header-section\">\n        <div className=\"logo\">\n          <a href=\"http://localhost:3000/\">\n            <img src={require('../../assets/images/reddit-logo-full.png')} alt=\"reddit-logo\"/>\n          </a>\n        </div>\n\n        <div className=\"content-type\">\n          <i className={`fa ${classname}`} aria-hidden=\"true\"></i>\n          <p>{postType}</p>\n        </div>\n\n        <div className=\"input\">\n          <span className=\"fa fa-search\"></span>\n          <form>\n            <input type=\"text\" placeholder=\"Search Reddit\"/>\n          </form>\n        </div>\n\n        <div className=\"icons\">\n          <div className=\"popular\" onClick={() => iconFunction('Popular', 'fa-line-chart', 30)}>\n            <i className=\"fa fa-line-chart\" aria-hidden=\"true\"></i>\n          </div>\n          <div className=\"all\" onClick={() => iconFunction('All', 'fa-bar-chart', 30)}>\n            <i className=\"fa fa-bar-chart\" aria-hidden=\"true\"></i>\n          </div>\n          <div className=\"original-content\"  onClick={() => iconFunction('Original', 'fa-pie-chart', 30)}>\n            <i className=\"fa fa-pie-chart\" aria-hidden=\"true\"></i>\n          </div>\n        </div>\n\n        <div className=\"btns\">\n          <div>\n            <button className=\"button log-in\">LOG IN</button>\n          </div>\n          <div>\n            <button className=\"button sign-up\">SING UP</button>\n          </div>\n        </div>\n\n        <div className=\"user\">\n          <div className=\"user-place dropdown\">\n            <i className=\"fa fa-user-circle dropbtn\" aria-hidden=\"true\"></i>\n            <div className=\"dropdown-content\">\n              <a href=\"null\">Link 1</a>\n              <a href=\"null\">Link 2</a>\n              <a href=\"null\">Link 3</a>\n            </div>\n          </div>\n        </div>\n      </section>\n    </header>\n  );\n}\n \nexport default Header; ","import React from 'react'\nimport numeral from 'numeral'\n\nimport './Post.css'\n\nconst Post = (props) => (\n  <div className=\"post-container\">\n    <div className=\"post\">\n      <div className=\"ups\">\n        <i className=\"fa fa-caret-up\" aria-hidden=\"true\"></i>\n        <p>{numeral(props.ups).format('0a')}</p>\n        <i className=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n      </div>\n      <div className=\"post-content\">\n        <div className=\"post-header\">\n          <h5 className=\"post-subreddit\">{props.subreddit}</h5>\n          <p className=\"post-info\">- Posted by <span className=\"post-author\">{props.author}</span></p>\n        </div>\n        <div className=\"post-title\">\n          <h2>{props.title}</h2> \n        </div>\n        <div className=\"post-footer\">\n          <div className=\"post-commetns\">\n            <i className=\"fa fa-comments\" aria-hidden=\"true\"></i>\n            <p>{numeral(props.num_comments).format('0a')}</p>\n            <span>Comments</span>\n          </div>\n          <div className=\"post-share\">\n            <i class=\"fa fa-share\" aria-hidden=\"true\"></i>\n            <span>Share</span>\n          </div>\n          <div className=\"post-share\">\n            <i class=\"fa fa-bookmark\" aria-hidden=\"true\"></i>\n            <span>Save</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n \nexport default Post;\n\n//     {props.title}\n//     {props.subreddit}\n//     {props.author}\n//     {props.subreddit_subscribers}\n//     {props.ups}\n//     {props.num_comments}","import React from 'react';\n\nimport './PostsList.css'\n\nimport Post from '../../containers/Post'\n\nconst PostsList = (props) => {\n  return (\n    <section className=\"posts-section\">\n      {props.posts.map(item => (\n        <Post \n          key={item.data.id}\n          subreddit={item.data.subreddit_name_prefixed}\n          subreddit_subscribers={item.data.subreddit_subscribers}\n          author={item.data.author}\n          title={item.data.title}\n          is_video={item.data.is_video}\n          media={item.data.media}\n          ups={item.data.ups}\n          num_comments={item.data.num_comments}\n        />\n      ))}\n    </section>\n  );\n}\n \nexport default PostsList;","import PostsList from './PostsList'\n\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = state => ({\n  posts: state.postsReducer.posts\n})\n\nexport default connect(mapStateToProps)(PostsList)","import React, { Component } from 'react'\nimport { Helmet } from \"react-helmet\";\nimport { Route, Switch } from 'react-router-dom'\nimport Loader from 'react-loader-spinner'\n\nimport Header from '../../containers/Header'\nimport PostsList from '../PostsList'\n\nimport './AppContainer.css'\n\nclass AppContainer extends Component {\n\n  componentDidMount() {\n    this.props.actions.fetchPosts('popular', 30)\n  }\n\n  render() { \n    return (\n      <div>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Reddit</title>\n        <link rel=\"icon\" href={require('../../assets/images/reddit-icon.png')} type=\"image/png\" sizes=\"16x16\" />\n      </Helmet>\n\n      <Header fetchPosts={this.props.actions.fetchPosts}/>\n      \n      <section className={`posts-loading-${this.props.loading}`}>\n        {this.props.loading === true \n        ? <Loader type=\"Oval\" color=\"orange\" height={120} width={120} /> \n        : <PostsList />}\n      </section>\n\n      \n                \n      <Switch>\n        <Route exact path=\"/\" render={() => <div></div>} />\n      </Switch>\n    </div>\n    );\n  }\n}\n \nexport default AppContainer;","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { fetchPosts } from '../../store/Posts/actions'\n\nimport AppContainer from './AppContainer'\n\nconst mapStateToProps = state => ({\n  posts: state.postsReducer.posts,\n  loading: state.postsReducer.loading,\n  error: state.postsReducer.error\n})\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n    fetchPosts\n  }, dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer)","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { createBrowserHistory } from 'history'\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport './App.css'\n\n// import { initStyles } from './styles'\nimport configureStore from './store/configureStore'\n\nimport AppContainer from './view/AppContainer'\n\nconst history = createBrowserHistory()\nconst store = configureStore(history)\n\n// initStyles()\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <AppContainer />\n      </ConnectedRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport createReducer from './reducers';\n\nexport default function configureStore(history) {\n  const middlewares = [thunk, routerMiddleware(history)];\n  const enhancers = composeWithDevTools(applyMiddleware(...middlewares));\n  return createStore(connectRouter(history)(createReducer()), enhancers);\n}","import { combineReducers } from 'redux'\n\nimport postsReducer from './Posts/reducer'\n\nexport default function createReducer() {\n  return combineReducers({\n    postsReducer\n  })\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}