{"version":3,"sources":["styles/resetStyles.js","styles/initStyles.js","store/Posts/constants.js","store/Posts/reducer.js","store/Posts/actions.js","api/reddit-api.js","components/Button/Button.js","components/Header/styles/Icon.js","components/Header/styles/Input.js","components/Header/styles/User.js","components/Header/styles/Logo.js","components/Header/styles/ContentIcon.js","components/Header/styles/Wrapper.js","components/Header/Header.js","components/Post/styles/Ups.js","components/Post/styles/PostHeader.js","components/Post/styles/PostTitle.js","components/Post/styles/PostFooterIcon.js","components/Post/styles/Wrapper.js","components/Post/styles/Image.js","components/Post/styles/UrlLink.js","components/Post/styles/Video.js","components/Post/styles/HostedVideo.js","components/Post/Post.js","view/Posts/Posts.js","view/Posts/index.js","view/PostPage/PostPage.js","view/PostPage/index.js","view/Routers/Routers.js","view/Routers/index.js","App.js","store/configureStore.js","store/reducers.js","index.js","assets/images/reddit-icon.png","assets/images/reddit-logo-full.png"],"names":["resetStyles","injectGlobal","_templateObject","initStyles","FETCH_POSTS_BEGIN","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","initialState","posts","loading","error","postsReducer","state","arguments","length","undefined","action","type","console","log","payload","data","children","fetchPosts","limit","dispatch","fetchPostsBegin","fetch","concat","fetchPostsURL","then","handleErrors","res","json","fetchPostsSuccess","catch","fetchPostsFailure","fetchOriginalPosts","fetchOriginalPostsURL","response","ok","Error","statusText","Button","styled","button","Button_templateObject","props","primary","StyledDiv","div","Icon_templateObject","Icon","_ref","classname","click","react_default","a","createElement","onClick","Link","to","className","aria-hidden","Input_templateObject","Input","placeholder","Input_StyledDiv","User_templateObject","User","User_StyledDiv","Logo_templateObject","Logo","link","Logo_StyledDiv","href","src","redditLogo","alt","ContentIcon_templateObject","ContentIcon","postType","ContentIcon_StyledDiv","Wrapper","Wrapper_templateObject","header","css","_templateObject2","_ref2","icons","_templateObject3","_ref3","btns","_templateObject4","Header","_useState","useState","_useState2","Object","slicedToArray","setClassname","_useState3","_useState4","setPostType","iconFunction","icon","Logo_Logo","ContentIcon_ContentIcon","Input_Input","Icon_Icon","Button_Button","User_User","Ups_templateObject","Ups","Ups_StyledDiv","PostHeader_templateObject","PostHeader","subreddit","author","PostHeader_StyledDiv","PostTitle_templateObject","PostTitle","title","permalink","PostTitle_StyledDiv","PostFooterIcon_templateObject","PostFooterIcon","faClass","text","PostFooterIcon_StyledDiv","styles_Wrapper_templateObject","container","Wrapper_templateObject2","Wrapper_templateObject3","content","Wrapper_templateObject4","_ref4","footer","_templateObject5","Image_templateObject","post_hint","Image","url","Image_StyledDiv","UrlLink_templateObject","UrlLink","UrlLink_StyledDiv","Video_templateObject","Video","preview","Video_StyledDiv","ReactPlayer_default","reddit_video_preview","fallback_url","controls","is_gif","playing","loop","HostedVideo_templateObject","HostedVideo","media","HostedVideo_StyledDiv","reddit_video","Post","_ref$data","ups","subreddit_name_prefixed","num_comments","Wrapper_Wrapper","Ups_Ups","numeral","format","PostHeader_PostHeader","PostTitle_PostTitle","Video_Video","HostedVideo_HostedVideo","UrlLink_UrlLink","Image_Image","PostFooterIcon_PostFooterIcon","StyledSection","section","Posts_templateObject","Posts_templateObject2","Posts","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","history","listen","location","fetchReddit","match","actions","Posts_StyledDiv","react_loader_spinner_default","color","height","width","map","item","components_Post_Post","key","id","Component","withRouter","connect","bindActionCreators","PostPage_templateObject","PostPage","PostPage_StyledDiv","AppContainer","Helmet","charSet","rel","redditIcon","sizes","components_Header_Header","Switch","Route","exact","path","component","Routers","createBrowserHistory","store","middlewares","thunk","routerMiddleware","enhancers","composeWithDevTools","applyMiddleware","apply","createStore","connectRouter","combineReducers","configureStore","App","es","lib","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8705a130.chunk.js","sourcesContent":["import { injectGlobal } from 'styled-components';\n\nconst resetStyles = () => {\n  // eslint-disable-next-line no-unused-expressions\n  injectGlobal`\n    html, body, div, span, applet, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n    a, abbr, acronym, address, big, cite, code,\n    del, dfn, em, img, ins, kbd, q, s, samp,\n    small, strike, strong, sub, sup, tt, var,\n    b, u, i, center,\n    dl, dt, dd, ol, ul, li,\n    fieldset, form, label, legend,\n    table, caption, tbody, tfoot, thead, tr, th, td,\n    article, aside, canvas, details, embed, \n    figure, figcaption, footer, header, hgroup, \n    menu, nav, output, ruby, section, summary,\n    time, mark, audio, video {\n      margin: 0;\n      padding: 0;\n      border: 0;\n      font-size: 100%;\n      font: inherit;\n      vertical-align: baseline;\n    }\n    /* HTML5 display-role reset for older browsers */\n    article, aside, details, figcaption, figure, \n    footer, header, hgroup, menu, nav, section {\n      display: block;\n    }\n    body {\n      line-height: 1;\n    }\n    ol, ul {\n      list-style: none;\n    }\n    blockquote, q {\n      quotes: none;\n    }\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n      content: '';\n      content: none;\n    }\n    table {\n      border-collapse: collapse;\n      border-spacing: 0;\n    }\n    html {\n      overflow-y: scroll;\n    }\n  `;\n};\n\nexport default resetStyles;","import resetStyles from './resetStyles'\n\nconst initStyles = () => {\n  resetStyles();\n};\n\nexport default initStyles;","export const FETCH_POSTS_BEGIN   = 'FETCH_POSTS_BEGIN';\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS'\nexport const FETCH_POSTS_FAILURE = 'FETCH_POSTS_FAILURE';","import { FETCH_POSTS_BEGIN, FETCH_POSTS_SUCCESS, FETCH_POSTS_FAILURE } from './constants';\n\nconst initialState = {\n  posts: [],\n  loading: false,\n  error: null\n};\n\nfunction postsReducer(state = initialState, action) {\n  switch (action.type) {\n\n    case FETCH_POSTS_BEGIN:\n    return {\n      loading: true\n    }\n\n    case FETCH_POSTS_SUCCESS:\n    console.log('success', action.payload.data.children)\n    return {\n      posts: action.payload.data.children,\n      loading: false\n    };\n\n    case FETCH_POSTS_FAILURE:\n    return {\n      loading: false,\n      error: '404 Posts Not Found'\n    }\n\n    default:\n    return state;\n\n  }\n}\n\nexport default postsReducer;","import { FETCH_POSTS_BEGIN, FETCH_POSTS_SUCCESS, FETCH_POSTS_FAILURE } from './constants';\nimport { fetchPostsURL, fetchOriginalPostsURL } from '../../api/reddit-api'\n\nconst fetchPosts = (type, limit) => dispatch => {\n  dispatch(fetchPostsBegin());\n  return fetch(fetchPostsURL(type, limit))\n  .then(handleErrors)\n  .then(res => res.json())\n  .then(json => {\n    dispatch(fetchPostsSuccess(json.data));\n    return json;\n  })\n  .catch(error => dispatch(fetchPostsFailure(error)));\n}\n\nconst fetchOriginalPosts = (limit) => dispatch => {\n  dispatch(fetchPostsBegin());\n  return fetch(fetchOriginalPostsURL(limit))\n  .then(handleErrors)\n  .then(res => res.json())\n  .then(json => {\n    dispatch(fetchPostsSuccess(json.data));\n    return json;\n  })\n  .catch(error => dispatch(fetchPostsFailure(error)));\n}\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\nconst fetchPostsBegin = () => ({\n  type: FETCH_POSTS_BEGIN\n})\n\nconst fetchPostsSuccess = data => ({\n  type: FETCH_POSTS_SUCCESS,\n  payload: { data }\n})\n\nconst fetchPostsFailure = error => ({\n  type: FETCH_POSTS_FAILURE\n})\n\nexport { fetchPosts, fetchOriginalPosts }","function fetchPostsURL(type, limit) {\n  return `https://www.reddit.com/r/${type}.json?limit=${limit}`\n}\n\nfunction fetchOriginalPostsURL(limit) {\n  return `https://www.reddit.com/original.json?limit=${limit}`\n}\n\nexport { fetchPostsURL, fetchOriginalPostsURL }","import styled from 'styled-components'\n\nconst Button = styled.button`\n  background: ${props => props.primary ? \"#504b4c\" : \"#fff\"};\n  color: ${props => props.primary ? \"#fff\" : \"#504b4c\"};\n\n  width: 130px;\n  height: 35px;\n  backface-visibility: hidden;\n  position: relative;\n  cursor: pointer;\n  display: inline-block;\n  white-space: nowrap;\n  border-radius: 5px;\n  border-width: 2px 2px 2px 2px;\n  font-size: initial;\n  font-family: Helvetica Neue;\n  font-weight: 500;\n  font-style: normal;\n  word-spacing: 4px;\n  border: 2px solid #353031;\n`\n\nexport default Button","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.div`\n  cursor: pointer;\n  a {\n    color: #000;\n    text-decoration: none;\n    :hover, :active {\n      text-decoration: none;\n    }\n  }\n  i {\n    padding: 8px;\n    border-radius: 3px;\n    :hover {\n      background-color: #dddcdc;\n    }\n  } \n`\n\nexport const Icon = ({classname, click, type}) => (\n  <StyledDiv onClick={click}>\n    <Link to={`/r/${type}`}>\n      <i className={`fa ${classname}`} aria-hidden=\"true\"></i>   \n    </Link>\n  </StyledDiv>\n)","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: baseline;\n  align-items: center;\n  position: relative;\n  color: #aaa;\n  font-size: 16px;\n  span {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n  }\n  form input {\n    width: 400px;\n    height: 32px;\n    background: #fcfcfc;\n    border: 1px solid #aaa;\n    border-radius: 5px;\n    text-indent: 32px;\n  }\n`\n\n\nexport const Input = ({ placeholder }) => (\n  <StyledDiv>\n    <span className=\"fa fa-search\"></span>\n    <form>\n      <input type=\"text\" placeholder={placeholder}/>\n    </form>\n  </StyledDiv>\n)","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.div`\n  display: flex;\n`\n\nexport const User = () => (\n  <StyledDiv>\n    <i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i>\n  </StyledDiv>\n)","import React from 'react'\nimport styled from 'styled-components'\nimport redditLogo from '../../../assets/images/reddit-logo-full.png'\n\nconst StyledDiv = styled.div`\n  width: 140px;\n  a img {\n    width: 110px;\n  }\n`\n\nexport const Logo = ({ link, click }) => (\n  <StyledDiv>\n    <a href={link} onClick={click}>\n      <img src={redditLogo} alt=\"reddit-logo\"/>\n    </a>\n  </StyledDiv>\n)","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: baseline;\n  align-items: center;\n  width: 165px;\n  i {\n    font-size: 20px;\n    color: blue;\n    margin-right: 6px;\n  }\n`\n\nexport const ContentIcon = ({ classname, postType }) => (\n  <StyledDiv>\n    <i className={`fa ${classname}`} aria-hidden=\"true\"></i>\n    <p>{postType}</p>\n  </StyledDiv>\n)","import styled, { css } from 'styled-components'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  ${({ header }) => \n    header && css`\n      padding: 5px 10px;\n      border-bottom: 1px solid rgba(0,0,0,0.2);\n      position: fixed;\n      top: 0;\n      width: 99%;\n      background-color: white;\n    `\n  }\n  ${({ icons }) => \n    icons && css`\n      width: 120px;\n      font-size: 16px;\n      margin: 0px 22px;      \n    `\n  }\n  ${({ btns }) => \n    btns && css`\n      width: 300px;\n    `\n  }\n`","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Button } from '../Button/index'\nimport { Input, Icon, User, Logo, ContentIcon, Wrapper } from './styles'\n\n\nconst Header = () => {\n  \n  const [classname, setClassname] = useState('fa-line-chart')\n  const [postType, setPostType] = useState('Popular')\n\n  const iconFunction = (type, icon) => {\n    setClassname(icon)\n    setPostType(type)\n  }\n  \n  return (\n    <header>\n      <Wrapper header>\n\n        <Link to=\"/\">\n          <Logo link=\"http://localhost:3000/\" click={() => iconFunction('Popular', 'fa-line-chart')}/>\n        </Link>\n\n        <ContentIcon classname={classname} postType={postType}/>\n\n        <Input placeholder=\"Search Reddit\"/>\n\n        <Wrapper icons>\n          <Icon classname=\"fa-line-chart\" type=\"popular\"  click={() => iconFunction('Popular', 'fa-line-chart')}/>\n          <Icon classname=\"fa-bar-chart\" type=\"all\"  click={() => iconFunction('All', 'fa-bar-chart')}/>\n          <Icon classname=\"fa-pie-chart\" type=\"original\"  click={() => iconFunction('Original', 'fa-pie-chart')}/>\n        </Wrapper>\n\n        <Wrapper btns>\n          <Button primary>LOG IN</Button>\n          <Button>SING UP</Button>\n        </Wrapper>\n\n        <User />\n\n      </Wrapper>\n    </header>\n  );\n}\n \nexport default Header; ","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  padding-right: 10px;\n  min-width: 45px;\n  i {\n    font-size: 22px;\n    color: #6e6e6e;\n    padding: 3px 6px;\n  }\n  p {\n    font-size: 18px;\n  }\n  .fa-caret-up:hover {\n    color: red;\n  }\n  .fa-caret-down:hover {\n    color: blue;\n  }\n`\n\nexport const Ups = ({ children }) => (\n  <StyledDiv>\n    <i className=\"fa fa-caret-up\" aria-hidden=\"true\"></i>\n      <p>{children}</p>\n    <i className=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n  </StyledDiv>\n)","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  margin-bottom: 15px;\n  * {\n    margin-right: 6px;\n  }\n  h5 {\n    font-size: 14px;\n    :hover {\n      text-decoration: underline;\n    }\n  }\n  p {\n    font-size: 11px;\n    color: grey;\n    span:hover {\n      text-decoration: underline;\n    }\n  }\n`\n\nexport const PostHeader = ({ subreddit, author }) => (\n  <StyledDiv>\n    <h5>{subreddit}</h5>\n    <p>- Posted by <span>{author}</span></p>\n  </StyledDiv>\n)","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.div`\n  font-size: 20px;\n  h2 a {\n    text-decoration: none;\n    color: black;\n  }\n`\n\nexport const PostTitle = ({ title, permalink }) => (\n  <StyledDiv>\n    <h2>\n      <Link to={`${permalink}`}>{title}</Link>\n    </h2>\n  </StyledDiv>\n)","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  color: #8a8888;\n  align-items: baseline;\n  width: min-content;\n  padding: 2px 4px;\n  border-radius: 5px;\n  font-size: 14px;\n  margin-right: 5px;\n  :hover {\n    background-color: #e2e0e0;\n  }\n  p {\n    margin-right: 4px;\n  }\n  i {\n    font-size: 16px;\n    margin-right: 4px;\n  }\n`\n\nexport const PostFooterIcon = ({ faClass, children, text }) => (\n  <StyledDiv>\n    <i className={`fa ${faClass}`} aria-hidden=\"true\"></i>\n    <p>{children}</p>\n    <span>{text}</span>\n  </StyledDiv>\n)","import styled, { css } from 'styled-components'\n\nexport const Wrapper = styled.div`\n\n  ${({ container }) => \n    container && css`\n      width: 600px;\n      padding: 10px 0px;\n      border: 1px solid rgba(0,0,0,0.2);\n      margin: 10px;\n      border-radius: 5px;\n      cursor: pointer;\n      transition: border 0.07s ease-out;\n      :hover {\n        border: 1px solid rgba(0,0,0,0.4);\n      }\n    `\n  }\n\n  ${({ posts }) => \n    posts && css`\n      display: flex;\n      flex-direction: row;\n      padding: 5px 10px;\n    `\n  }\n\n  ${({ content }) => \n    content && css`\n      display: flex;\n      flex-direction: column;\n    `\n  }\n\n  ${({ footer }) => \n    footer && css`\n      margin-top: 15px;\n      display: flex;\n      flex-direction: row;\n      align-items: baseline;\n    `\n  }\n  \n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.div`\n  display: ${props => props.post_hint === \"image\" ? \"block\" : \"none\"};\n  img {\n    max-height: 500px;\n    max-width: 400px;\n    margin: 20px 10px 0px 10px;\n  }\n`\n\nexport const Image = ({ post_hint, url }) => (\n  <StyledDiv post_hint={post_hint}>\n    <img src={url} alt=\"eslint shut up!\"/>\n  </StyledDiv>\n)","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.div`\n  display: ${props => props.post_hint === \"link\" ? \"block\" : \"none\"};\n  margin-top: 10px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 440px;\n  font-size: 12px;\n  font-family: 'Courier New', Courier, monospace;\n`\n\nexport const UrlLink = ({ post_hint, url }) => (\n  <StyledDiv post_hint={post_hint}>\n    <a href={url}>\n      <span className=\"link\">{url}</span>\n    </a>\n  </StyledDiv>\n)","import React from 'react'\nimport styled from 'styled-components'\nimport ReactPlayer from 'react-player'\n\nconst StyledDiv = styled.div`\n  * {\n    margin: 10px 0px;\n    max-height: 480px;\n    max-width: 480px;\n  }\n`\n\nexport const Video = ({ preview }) => (\n  <StyledDiv>\n    <ReactPlayer \n      url={preview.reddit_video_preview.fallback_url} \n      controls={preview.reddit_video_preview.is_gif === true ? false : true}\n      playing={preview.reddit_video_preview.is_gif === true ? true : false}\n      loop={preview.reddit_video_preview.is_gif === true ? true : false}\n    />\n  </StyledDiv>\n)","import React from 'react'\nimport styled from 'styled-components'\nimport ReactPlayer from 'react-player'\n\nconst StyledDiv = styled.div`\n  * {\n    margin: 10px 0px;\n    max-height: 480px;\n    max-width: 480px;\n  }\n`\n\nexport const HostedVideo = ({ media }) => (\n  <StyledDiv>\n    <ReactPlayer \n      url={media.reddit_video.fallback_url} \n      playing=\"true\"\n      loop=\"true\"\n    />\n  </StyledDiv>\n)","import React from 'react'\nimport numeral from 'numeral'\n\nimport { Ups, PostHeader, PostTitle, PostFooterIcon, Wrapper, Image, UrlLink, Video, HostedVideo } from './styles'\n\nconst Post = ({data: {\n    ups, \n    subreddit_name_prefixed, \n    author, \n    url, \n    post_hint,\n    media,\n    preview, \n    title, \n    num_comments,\n    permalink\n  }}) => (\n  <Wrapper container>\n    <Wrapper posts>\n      <Ups>{numeral(ups).format('0a')}</Ups>\n      <Wrapper content>\n        <PostHeader subreddit={subreddit_name_prefixed} author={author} />\n        <PostTitle title={title} permalink={permalink} />\n\n        {post_hint === \"rich:video\" ? (<Video preview={preview} />) : null}\n        {post_hint === \"hosted:video\" ? (<HostedVideo media={media} />) : null}\n        <UrlLink post_hint={post_hint} url={url} preview={preview} />\n        {post_hint === \"link\" && preview.reddit_video_preview !== undefined ? (<Video preview={preview} />) : null}\n        <Image post_hint={post_hint} url={url} />\n        \n        <Wrapper footer>\n          <PostFooterIcon faClass={\"fa-comments\"} children={numeral(num_comments).format('0a')} text={\"Comments\"}/>\n          <PostFooterIcon faClass={\"fa-share\"} text={\"Share\"}/>\n          <PostFooterIcon faClass={\"fa-bookmark\"} text={\"Save\"}/>\n        </Wrapper>\n      </Wrapper>\n    </Wrapper>\n  </Wrapper>\n)\n \nexport default Post","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport Loader from 'react-loader-spinner'\n\nimport Post from '../../components/Post'\n\nconst StyledSection = styled.section`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst StyledDiv = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  min-height: 89vh;\n  margin-top: 40px;\n`\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.history.listen((location) => {\n      this.fetchReddit(this.props.match.url)\n    })\n  }\n\n  fetchReddit(url) {\n    switch (url) {\n      case '/':\n      this.props.actions.fetchPosts('popular', 10)\n        break;\n      case '/r/popular':\n      this.props.actions.fetchPosts('popular', 10)\n        break;\n      case '/r/all':\n      this.props.actions.fetchPosts('all', 10)\n        break;\n      case '/r/original':\n      this.props.actions.fetchOriginalPosts('original', 10)\n        break;\n      default:\n      this.props.actions.fetchPosts('popular', 10)\n    }\n  }\n\n  componentDidMount() {\n    this.fetchReddit(this.props.match.url)\n  }\n\n  \n  render() {\n    return (\n      <StyledDiv>\n      {this.props.loading === true \n        ? <Loader type=\"Oval\" color=\"orange\" height={120} width={120} /> \n        : <StyledSection>\n          {this.props.posts.map(item => ( <Post key={item.data.id} data={item.data} /> ))}\n        </StyledSection>}\n      </StyledDiv>\n    )\n  }\n}\n\nexport default Posts","import Posts from './Posts'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\n\nimport { fetchPosts, fetchOriginalPosts } from '../../store/Posts/actions'\n\nconst mapStateToProps = state => ({\n  posts: state.postsReducer.posts,\n  loading: state.postsReducer.loading\n})\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n    fetchPosts,\n    fetchOriginalPosts\n  }, dispatch)\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Posts))","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 100px;\n`\n\nclass PostPage extends Component {    \n  render() { \n    return (\n      <StyledDiv>\n        this is post page\n      </StyledDiv>\n    );\n  }\n}\n \nexport default PostPage","import PostPage from './PostPage'\nimport { withRouter } from 'react-router-dom'\n\nexport default withRouter(PostPage)","import React, { Component } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { Route, Switch } from 'react-router-dom'\n\nimport redditIcon from '../../assets/images/reddit-icon.png'\nimport Header from '../../components/Header'\nimport Posts from '../Posts'\nimport PostPage from '../PostPage'\n\nexport default class AppContainer extends Component {\n\n  render() { \n    return (\n      <section>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>reddit-client</title>\n          <link rel=\"icon\" href={redditIcon} type=\"image/png\" sizes=\"16x16\" />\n        </Helmet>\n\n        <Header />\n\n        <Switch>\n          <Route exact path=\"/\" component={Posts} />\n          <Route exact path=\"/r/:type\" component={Posts} />\n          <Route path=\"/:permalink\" component={PostPage} />\n        </Switch>\n      </section>\n    )\n  }\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchPosts, fetchOriginalPosts } from '../../store/Posts/actions'\n\nimport Routers from './Routers'\n\nconst mapStateToProps = state => ({\n  posts: state.postsReducer.posts,\n  loading: state.postsReducer.loading,\n  error: state.postsReducer.error\n})\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n    fetchPosts,\n    fetchOriginalPosts\n  }, dispatch)\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Routers))","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { createBrowserHistory } from 'history'\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport { initStyles } from './styles'\nimport configureStore from './store/configureStore'\n\nimport Routers from './view/Routers'\n\nconst history = createBrowserHistory()\nconst store = configureStore(history)\n\ninitStyles()\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <Routers />\n      </ConnectedRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport createReducer from './reducers';\n\nexport default function configureStore(history) {\n  const middlewares = [thunk, routerMiddleware(history)];\n  const enhancers = composeWithDevTools(applyMiddleware(...middlewares));\n  return createStore(connectRouter(history)(createReducer()), enhancers);\n}","import { combineReducers } from 'redux'\n\nimport postsReducer from './Posts/reducer'\n\nexport default function createReducer() {\n  return combineReducers({\n    postsReducer\n  })\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/reddit-icon.990cf579.png\";","module.exports = __webpack_public_path__ + \"static/media/reddit-logo-full.bffb9b95.png\";"],"sourceRoot":""}